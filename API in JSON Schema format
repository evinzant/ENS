This is a formal, machine-readable spec that can be used for:
	•	Validation
	•	Code generation (e.g., TypeScript or Rust clients)
	•	API documentation
	•	Integration with OpenAPI tools (Swagger, Postman, etc.)

Defined JSON Schemas for:
	1.	/accumulate request & response
	2.	/submit-update (model keeper → blockchain)
	3.	/status response
	4.	ENS error format

⸻

1. /accumulate – Swarm Node

Request Schema

{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "AccumulateRequest",
  "type": "object",
  "properties": {
    "inputs": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "ciphertext": { "type": "string" },
          "weight": { "type": "number" }
        },
        "required": ["ciphertext", "weight"]
      }
    }
  },
  "required": ["inputs"]
}

Response Schema

{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "AccumulateResponse",
  "type": "object",
  "properties": {
    "result": { "type": "string" }
  },
  "required": ["result"]
}

⸻

2. /submit-update – Model Keeper

Request Schema

{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "WeightUpdateRequest",
  "type": "object",
  "properties": {
    "model_id": { "type": "string" },
    "layer": { "type": "integer" },
    "neuron": { "type": "integer" },
    "old_weight": { "type": "number" },
    "new_weight": { "type": "number" },
    "update_reason": { "type": "string" },
    "timestamp": { "type": "string", "format": "date-time" },
    "author": { "type": "string" },
    "signature": { "type": "string" }
  },
  "required": ["model_id", "layer", "neuron", "old_weight", "new_weight", "update_reason", "timestamp", "author", "signature"]
}

⸻

3. /status – Swarm Node

Response Schema

{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "StatusResponse",
  "type": "object",
  "properties": {
    "node": { "type": "string", "enum": ["swarm", "client", "model_keeper", "blockchain"] },
    "version": { "type": "string" },
    "public_key_fingerprint": { "type": "string" },
    "model_id": { "type": "string" }
  },
  "required": ["node", "version", "public_key_fingerprint", "model_id"]
}

⸻

4. ENS Error Format

Error Schema

{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "ENSError",
  "type": "object",
  "properties": {
    "error": { "type": "string" },
    "code": { "type": "integer" },
    "hint": { "type": "string" }
  },
  "required": ["error", "code"]
}
